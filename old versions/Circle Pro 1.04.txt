// This macro tool creates an array of circles or rectangles from user input. 
// Install permanently by saving this text file in the ImageJ\macros\toolsets folder
// Click the >> button on the tool bar and then select Circle Pro 
// Created by Ben 3  
// ver 1.4
 
var chambrow = 20
var chambcol = 8
macro "Circle Pro Tool - C000D38D43D49D53D5aD6aD7aD8aD99D9aDa8Da9Db8C000C111D93Da3C111C222C333C444C555C666C777D27D37C777C888C999CaaaCbbbCcccD6bD7bD8bCcccCdddD92Da2CdddD54CdddCeeeD28D94Da4CeeeCfffD44Cfff"{ 
getDimensions(iwidth, iheight, channels, slices, frames);
 // Prompt: Device information
	Dialog.createNonBlocking("Circle Pro"); 
	Dialog.setLocation(1000,100);
	Dialog.addNumber("Number of chambers in a row", chambrow); 
	Dialog.addNumber("Number of chambers in a column", chambcol);
	Dialog.addCheckbox("Remove current ROIs", true)
	Dialog.addCheckbox("Rectangle Chambers", false)
	Dialog.show();
	chambrow= Dialog.getNumber();
	chambcol= Dialog.getNumber();
//	print(chambrow);
//	print(chambcol);
	wipe = Dialog.getCheckbox();
	rect = Dialog.getCheckbox();
//	print(wipe);
//	print(rect);
	run("Original Scale");
if ((roiManager("count") != 0)&& wipe == 1) {
	roiManager("deselect"); 
	roiManager("delete"); 
	run("Select None");
	setTool(1);
}
if (rect == 0) {
// Prompt : create first circle 
	Dialog.createNonBlocking("Circle Pro");  
	Dialog.addMessage("Switch to oval tool and select the top left chamber"); 
	Dialog.addMessage("Then click OK"); 
	Dialog.show(); 
 
// Select first circle, rename to 1, duplicate, move by right name 2  
	roiManager("add"); 
	roiManager("select", 0); 
	roiManager("rename", 1); 
	Roi.getBounds(ox, oy, width, height); 
	makeOval((iwidth-(2*width)), oy, width, height);
	roiManager("add"); 
	roiManager("select", 1); 
	roiManager("rename", 2 ); 
	run("To Selection");
	run("Out [-]"); run("Out [-]"); run("Out [-]"); run("Out [-]");
	roiManager("show all");
	roiManager("Show All with labels");
 
// Prompt: Center ROI over last chamber
	Dialog.createNonBlocking("Circle Pro") 
	Dialog.setLocation(1000,100)
	Dialog.addMessage("Center circle over the top right chamber"); 
	Dialog.show();
	
// Center last chamber
	Roi.getBounds(xf, yf, width, height); 
	xpos = ((xf-ox) /(chambrow-1));
	ypos = ((yf - oy)/(chambrow-1)); 
	roiManager("Delete");
 	roiManager("select", 0); 
	getSelectionBounds(j, k, width, height); 

// Make 1-20 
	for (i = 0; i < (chambrow - 1); i++) { 
		makeOval(ox + ((i+1)*xpos), oy + ((i+1)*ypos), width, height); 
		roiManager("Add"); 
		roiManager("select", (1+i));  
		roiManager("rename", 2+i); 
		getSelectionBounds(j, k, width, height); 
} 

// Spawn 21 22
for (i = 0; i < 2; i++) { 
	if (i % 2 == 0) { 
		makeOval(ox, oy+(width*2.5), width, height); // Spawn 21
}	else { 
		makeOval(ox, oy+(width*5.5), width, height); // Spawn 22
} 
	roiManager("Add"); 
	roiManager("select", (chambrow+i)); 
	Roi.setGroup(2+i); 
	roiManager("rename",((chambrow+1)+(i*chambrow))); 
} 
	roiManager("select", (chambrow))
	run("To Selection");
	run("Out [-]"); run("Out [-]"); run("Out [-]"); run("Out [-]"); run("Out [-]"); run("Out [-]");

//Prompt: Place bottom left chambers 
	Dialog.createNonBlocking("Circle Pro");  
	Dialog.setLocation(1000,100)
	Dialog.addMessage("Reposition ROIs "+roiManager("count")-1+" and "+roiManager("count"));  
	Dialog.show();  
 
roiManager("select", (roiManager("count")-1)); 
getSelectionBounds(xbl, ybl, width, height);   //22
roiManager("delete");
roiManager("select", (roiManager("count")-1));   //21
getSelectionBounds(xb, yb, width, height);
yshort = (yb - oy);
xtils = (xb - ox);
xtill = (xbl - xb);
ylong = (ybl - yb);
roiManager("delete");
temp = oy;
tiltemp = ox;
for (j = 0; j < (chambcol-1); j++) {

	if (j % 2 ==0) {
		temp = temp + yshort;
		tiltemp = tiltemp + xtils;
		makeOval(tiltemp , temp, width, height);}
	else{ 
		temp = temp + ylong; 
		tiltemp = tiltemp +xtill;
		makeOval(tiltemp, temp, width, height);}

	roiManager("Add");
	roiManager("select", (roiManager("count")-1));
	roiManager("rename",(roiManager("count"))); 
	run("To Selection"); run("Out [-]"); run("Out [-]");

	Dialog.createNonBlocking("Circle Pro");  
	Dialog.setLocation(1000,100)
	Dialog.addMessage("Check ROI: " +(j+2)+"/"+chambcol); 
	Dialog.show();  
	
	getSelectionBounds(x, y, width, height);
	for (i = 0; i< chambrow-1; i++) { 
		makeOval(x + ((i+1)*xpos), y + ((i+1)*ypos), width, height); 
		roiManager("Add");
		roiManager("select", (roiManager("count")-1));
		roiManager("rename",(roiManager("count"))); }
		 
}
run("Original Scale");
} else{
// Prompt : create first Rectangle 
	Dialog.createNonBlocking("Rectangle Pro");  
	Dialog.addMessage("Switch to rectangle tool and select the top left chamber"); 
	Dialog.addMessage("Then click OK"); 
	Dialog.show(); 
 
// Select first Rectangle, rename to 1, duplicate, move by right name 2  
	roiManager("add"); 
	roiManager("select", 0); 
	roiManager("rename", 1); 
	Roi.getBounds(ox, oy, width, height); 
	makeRectangle((iwidth-(2*width)), oy, width, height);
	roiManager("add"); 
	roiManager("select", 1); 
	roiManager("rename", 2 ); 
	run("To Selection");
	run("Out [-]"); run("Out [-]"); run("Out [-]"); run("Out [-]");
	roiManager("show all");
	roiManager("Show All with labels");
 
// Prompt: Center ROI over last chamber
	Dialog.createNonBlocking("Rectangle Pro") 
	Dialog.setLocation(1000,100)
	Dialog.addMessage("Center Rectangle over the top right chamber"); 
	Dialog.show();
	
// Center last chamber
	Roi.getBounds(xf, yf, width, height); 
	xpos = ((xf-ox) /(chambrow-1));
	ypos = ((yf - oy)/(chambrow-1)); 
	roiManager("Delete");
 	roiManager("select", 0); 
	getSelectionBounds(j, k, width, height); 

// Make 1-20 
	for (i = 0; i < (chambrow - 1); i++) { 
		makeRectangle(ox + ((i+1)*xpos), oy + ((i+1)*ypos), width, height); 
		roiManager("Add"); 
		roiManager("select", (1+i));  
		roiManager("rename", 2+i); 
		getSelectionBounds(j, k, width, height); 
} 

// Spawn 21 22
for (i = 0; i < 2; i++) { 
	if (i % 2 == 0) { 
		makeRectangle(ox, oy+(width*2.5), width, height); // Spawn 21
}	else { 
		makeRectangle(ox, oy+(width*5.5), width, height); // Spawn 22
} 
	roiManager("Add"); 
	roiManager("select", (chambrow+i)); 
	Roi.setGroup(2+i); 
	roiManager("rename",((chambrow+1)+(i*chambrow))); 
} 
	roiManager("select", (chambrow))
	run("To Selection");
	run("Out [-]"); run("Out [-]"); run("Out [-]"); run("Out [-]"); run("Out [-]"); run("Out [-]");

//Prompt: Place bottom left chambers 
	Dialog.createNonBlocking("Rectangle Pro");  
	Dialog.setLocation(1000,100)
	Dialog.addMessage("Reposition ROIs "+roiManager("count")-1+" and "+roiManager("count"));  
	Dialog.show();  
 
roiManager("select", (roiManager("count")-1)); 
getSelectionBounds(xbl, ybl, width, height);   //22
roiManager("delete");
roiManager("select", (roiManager("count")-1));   //21
getSelectionBounds(xb, yb, width, height);
yshort = (yb - oy);
xtils = (xb - ox);
xtill = (xbl - xb);
ylong = (ybl - yb);
roiManager("delete");
temp = oy;
tiltemp = ox;
for (j = 0; j < (chambcol-1); j++) {

	if (j % 2 ==0) {
		temp = temp + yshort;
		tiltemp = tiltemp + xtils;
		makeRectangle(tiltemp , temp, width, height);}
	else{ 
		temp = temp + ylong; 
		tiltemp = tiltemp +xtill;
		makeRectangle(tiltemp, temp, width, height);}

	roiManager("Add");
	roiManager("select", (roiManager("count")-1));
	roiManager("rename",(roiManager("count"))); 
	run("To Selection"); run("Out [-]"); run("Out [-]");

	Dialog.createNonBlocking("Rectangle Pro");  
	Dialog.setLocation(1000,100)
	Dialog.addMessage("Check ROI: " +(j+2)+"/"+chambcol); 
	Dialog.show();  
	
	getSelectionBounds(x, y, width, height);
	for (i = 0; i< chambrow-1; i++) { 
		makeRectangle(x + ((i+1)*xpos), y + ((i+1)*ypos), width, height); 
		roiManager("Add");
		roiManager("select", (roiManager("count")-1));
		roiManager("rename",(roiManager("count"))); }

run("Original Scale");
		 
}
} 
}

 
 
 
